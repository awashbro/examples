#!/bin/bash

# athenalaunch.sh
# payload launcher to be run as HPC parallel job
# jobs are orchestrated from steering script generated by customising athenalaunch.tmpl

# input arguments
WORKINGDIR=$1
masspoint1=$2
masspoint2=$3
fileid=$4
nevents=$5
startevent=$6
cores=$7

# set parameters
maxevents=$nevents
export ATHENA_PROC_NUMBER=$cores
firstEvent=$startevent
lastEvent=$((firstEvent + maxevents - 1))

# set working directories
BASEDIR="/work/d60/d60/shared"
EVNTDIR="$BASEDIR/data/WR/WR${masspoint1}NR${masspoint2}/EVNT"
EVNTFILENAME=`ls -1 $EVNTDIR | grep $fileid`
EVNTFILE="$EVNTDIR/$EVNTFILENAME"
SIMDIR="$BASEDIR/data/WR/WR${masspoint1}NR${masspoint2}/SIM"
LOCKFILE=$WORKINGDIR/lock/WR${masspoint1}-NR${masspoint2}-${EVNTFILENAME}-evt${firstEvent}-to-evt${lastEvent}.lock
RUNDIR=$WORKINGDIR/run/WR${masspoint1}NR${masspoint2}_${fileid}_${firstEvent}_${lastEvent}

# set run parameters
outputHITSfile="mc15.WR${masspoint1}NR${masspoint2}_${fileid}_${firstEvent}_${lastEvent}.pool.root"
EVNTRunNumber=$(cat $EVNTDIR/runnumber)

echo JOB PARAMETERS
echo "==="
echo WR $masspoint1
echo NR $masspoint2
echo fileid $fileid
echo number of events $maxevents
echo first event $firstEvent
echo last event $lastEvent
echo cores $cores
echo
echo event directory $EVNTDIR
echo event filename $EVNTFILENAME
echo working directory $WORKINGDIR
echo run directory $RUNDIR
echo lockfile $LOCKFILE
echo SIM directory $SIMDIR
echo output file name $outputHITSfile
echo "==="
echo

# change working directory
mkdir $RUNDIR
cd $RUNDIR

# link to EVNT file
ln -s $EVNTFILE .

# asetup (use overlay script)
export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh
cmtconfig=x86_64-slc6-gcc47-opt
#source /cvmfs/atlas.cern.ch/repo/sw/software/${cmtconfig}/19.2.3/cmtsite/asetup.sh 19.2.3,notest --cmtconfig ${cmtconfig}
source /work/d60/d60/shared/overlay/ATLAS/asetup/AtlasSetup/scripts/asetup.sh 19.2.4,notest --cmtconfig ${cmtconfig}
unset CMTPATH;cd /cvmfs/atlas.cern.ch/repo/sw/software/${cmtconfig}/19.2.4/AtlasProduction/19.2.4.19/AtlasProductionRunTime/cmt;source ./setup.sh;cd -

# get external dependencies
export LD_LIBRARY_PATH=/work/d60/d60/shared/deps/root/lib64:/work/d60/d60/shared/deps/root/usr/lib64:$LD_LIBRARY_PATH

# pool conditions path and unset FRONTIER_SERVER
export ATLAS_POOLCOND_PATH=/cvmfs/atlas.cern.ch/repo/conditions
unset FRONTIER_SERVER

# Run simulation payload (skip input file validation) 
Sim_tf.py --DataRunNumber ${EVNTRunNumber} --preInclude 'EVNTtoHITS:SimulationJobOptions/preInclude.BeamPipeKill.py,SimulationJobOptions/preInclude.FrozenShowersFCalOnly.py' --physicsList 'FTFP_BERT' --geometryVersion 'ATLAS-R2-2015-03-01-00_VALIDATION' --conditionsTag 'OFLCOND-RUN12-SDR-19' --enableLooperKiller 'True' --postInclude 'RecJobTransforms/UseFrontier.py' --DBRelease 'current' --simulator 'MC12G4' --truthStrategy 'MC12' --outputHITSFile ${outputHITSfile} --inputEVNTFile ${EVNTFILENAME} --maxEvents=${maxevents} --firstEvent ${firstEvent} --skipInputFileValidation 1>athena_stdout.txt 2>athena_stderr.txt
#sleep 300

# Move output files out of job directory
echo moving ${outputHITSfile} to $SIMDIR
mv -v ${outputHITSfile} $SIMDIR

# Remove worker output files
for i in $(find athenaMP-workers-EVNTtoHITS-sim | egrep "mc15\.WR.*root")
do
	echo removing worker output file $i
	rm -v $i
done

# Kill lock file
echo Removing lock - $LOCKFILE
rm $LOCKFILE

exit
